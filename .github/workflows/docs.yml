name: docs

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
    paths:
      - 'mkdocs.yml'
      - 'docs/**'
      - 'pyproject.toml'     # pick up version changes
      - '.github/workflows/docs.yml'
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Prepare docs assets
        run: |
          cp CHANGELOG.md docs/CHANGELOG.md
          cp CONTRIBUTORS.md docs/CONTRIBUTORS.md
          # If your license file is named 'LICENSE' (no extension), copy to LICENSE.md for MkDocs
          if [ -f LICENSE ]; then cp LICENSE docs/LICENSE.md; fi
          if [ -f LICENSE.md ]; then cp LICENSE.md docs/LICENSE.md; fi
          if [ -f LICENSE.md ]; then cp LICENSE.md docs/LICENSE.md; fi

      - name: Install MkDocs deps
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material mkdocs-material-extensions pyyaml-env-tag

      - name: Export version from pyproject.toml
        run: |
          V=$(python -c "import tomllib, pathlib; print(tomllib.loads(pathlib.Path('pyproject.toml').read_text(encoding='utf-8'))['project']['version'])")
          echo "WSPR_AI_LITE_VERSION=$V" >> "$GITHUB_ENV"

      - name: Build site
        env:
          WSPR_AI_LITE_VERSION: ${{ env.WSPR_AI_LITE_VERSION }}
        run: mkdocs build --strict

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
